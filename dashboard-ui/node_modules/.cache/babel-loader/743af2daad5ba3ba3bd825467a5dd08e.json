{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/raymondlee/Desktop/CIT/CIT_Term4/Service_Based_Architectures/Labs/Lab8/Containerization_lab7/dashboard-ui/src/components/EndpointAudit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../App.css';\nexport default function EndpointAudit(props) {\n  _s();\n\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [log, setLog] = useState(null);\n  const [error, setError] = useState(null);\n  const rand_val = Math.floor(Math.random() * 100); // Get a random event from the event store\n\n  const [index, setIndex] = useState(null);\n\n  const getAudit = () => {\n    fetch(`http://kafka.canadacentral.cloudapp.azure.com:9080/${props.endpoint}?index=${rand_val}`).then(res => res.json()).then(result => {\n      console.log(\"Received Audit Results for \" + props.endpoint);\n      setLog(result);\n      setIsLoaded(true);\n      setIndex(rand_val);\n    }, error => {\n      setError(error);\n      setIsLoaded(true);\n    });\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => getAudit(), 4000); // Update every 4 seconds\n\n    return () => clearInterval(interval);\n  }, [getAudit]);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: \"Error found when fetching from API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this);\n  } else if (isLoaded === false) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  } else if (isLoaded === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [props.endpoint, \"-\", index]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), JSON.stringify(log)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(EndpointAudit, \"mXHYHgL8gl3aQANy/BIwhWWgfps=\");\n\n_c = EndpointAudit;\n\nvar _c;\n\n$RefreshReg$(_c, \"EndpointAudit\");","map":{"version":3,"sources":["/Users/raymondlee/Desktop/CIT/CIT_Term4/Service_Based_Architectures/Labs/Lab8/Containerization_lab7/dashboard-ui/src/components/EndpointAudit.js"],"names":["React","useEffect","useState","EndpointAudit","props","isLoaded","setIsLoaded","log","setLog","error","setError","rand_val","Math","floor","random","index","setIndex","getAudit","fetch","endpoint","then","res","json","result","console","interval","setInterval","clearInterval","JSON","stringify"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,YAAP;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AACzC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACH,QAAMS,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAjB,CAJ4C,CAIM;;AAC/C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMe,QAAQ,GAAG,MAAM;AACnBC,IAAAA,KAAK,CAAE,sDAAqDd,KAAK,CAACe,QAAS,UAASR,QAAS,EAAxF,CAAL,CACKS,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEWG,MAAD,IAAU;AACxBC,MAAAA,OAAO,CAACjB,GAAR,CAAY,gCAAgCH,KAAK,CAACe,QAAlD;AACYX,MAAAA,MAAM,CAACe,MAAD,CAAN;AACAjB,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAU,MAAAA,QAAQ,CAACL,QAAD,CAAR;AACH,KAPL,EAOOF,KAAD,IAAU;AACRC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAH,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAVL;AAWH,GAZD;;AAaHL,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMwB,QAAQ,GAAGC,WAAW,CAAC,MAAMT,QAAQ,EAAf,EAAmB,IAAnB,CAA5B,CADe,CACuC;;AACtD,WAAM,MAAMU,aAAa,CAACF,QAAD,CAAzB;AACG,GAHK,EAGH,CAACR,QAAD,CAHG,CAAT;;AAKG,MAAIR,KAAJ,EAAU;AACN,wBAAQ;AAAK,MAAA,SAAS,EAAE,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACH,GAFD,MAEO,IAAIJ,QAAQ,KAAK,KAAjB,EAAuB;AAC1B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFM,MAEA,IAAIA,QAAQ,KAAK,IAAjB,EAAsB;AAEzB,wBACI;AAAA,8BACI;AAAA,mBAAKD,KAAK,CAACe,QAAX,OAAsBJ,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAGKa,IAAI,CAACC,SAAL,CAAetB,GAAf,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;AACJ;;GAvCuBJ,a;;KAAAA,a","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport '../App.css';\r\n\r\nexport default function EndpointAudit(props) {\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [log, setLog] = useState(null);\r\n    const [error, setError] = useState(null)\r\n\tconst rand_val = Math.floor(Math.random() * 100); // Get a random event from the event store\r\n    const [index, setIndex] = useState(null);\r\n\r\n    const getAudit = () => {\r\n        fetch(`http://kafka.canadacentral.cloudapp.azure.com:9080/${props.endpoint}?index=${rand_val}`)\r\n            .then(res => res.json())\r\n            .then((result)=>{\r\n\t\t\t\tconsole.log(\"Received Audit Results for \" + props.endpoint)\r\n                setLog(result);\r\n                setIsLoaded(true);\r\n                setIndex(rand_val);\r\n            },(error) =>{\r\n                setError(error)\r\n                setIsLoaded(true);\r\n            })\r\n    }\r\n\tuseEffect(() => {\r\n\t\tconst interval = setInterval(() => getAudit(), 4000); // Update every 4 seconds\r\n\t\treturn() => clearInterval(interval);\r\n    }, [getAudit]);\r\n\r\n    if (error){\r\n        return (<div className={\"error\"}>Error found when fetching from API</div>)\r\n    } else if (isLoaded === false){\r\n        return(<div>Loading...</div>)\r\n    } else if (isLoaded === true){\r\n   \r\n        return (\r\n            <div>\r\n                <h3>{props.endpoint}-{index}</h3>\r\n               \r\n                {JSON.stringify(log)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}